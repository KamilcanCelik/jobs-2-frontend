import React, { useEffect } from 'react';
import unFetch from 'isomorphic-unfetch';
import { getAccessTokenFromLocal } from '../../LocalStorage/accessToken';
import Head from 'next/head';

function SingleMessage({ id }) {
  const [message, setMessage] = React.useState({});

  useEffect(() => {
    const a = async () => {
      const res = await fetch(`http://localhost:5000/message/${id}`, {
        method: 'GET',
        headers: {
          Authorization: `Bearer ${getAccessTokenFromLocal()[0]}`,
        },
      });

      const data = await res.json();
      if (data.success) {
        setMessage(data.data);
      }
    };
    a();
  }, [id]);

  return (
    <div className="min-h-screen flex justify-center items-center">
      <Head>
        <title>Message</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {message.subject && (
        <div className="bg-[#f3f3f3] h-auto rounded-md shadow-md p-8">
          <h3 className="text-lg font-semibold mb-1">{message.subject}</h3>
          <p className="">{message.content}</p>
        </div>
      )}
    </div>
  );
}

export default SingleMessage;

export async function getStaticPaths() {
  const res = await unFetch('http://localhost:5000/message/messagesAll');

  const data = await res.json();
  return {
    paths: data.data.map((message) => {
      return {
        params: { id: message._id },
      };
    }),
    fallback: true,
  };
}

export async function getStaticProps({ params }) {
  return {
    props: {
      id: params.id,
      revalidate: 60,
    },
  };
}
